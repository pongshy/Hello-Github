<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shu.labrary.mapper.ApplybodyMapper" >
  <resultMap id="BaseResultMap" type="com.shu.labrary.pojo.Applybody" >
    <id column="requestId" property="requestid" jdbcType="INTEGER" />
    <result column="adminId" property="adminid" jdbcType="VARCHAR" />
    <result column="beginTime" property="begintime" jdbcType="TIMESTAMP" />
    <result column="endTime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="requestReason" property="requestreason" jdbcType="VARCHAR" />
    <result column="teacherId" property="teacherid" jdbcType="INTEGER" />
    <result column="applystatus" property="applystatus" jdbcType="INTEGER" />
    <result column="timestamp" property="timestamp" jdbcType="TIMESTAMP" />
    <result column="totalPersonNum" property="totalpersonnum" jdbcType="INTEGER" />
    <result column="refuseReason" property="refusereason" jdbcType="VARCHAR" />
    <result column="essayId" property="essayid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    requestId, adminId, beginTime, endTime, requestReason, teacherId, applystatus, timestamp, 
    totalPersonNum, refuseReason, essayId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shu.labrary.pojo.ApplybodyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from applybody
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from applybody
    where requestId = #{requestid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from applybody
    where requestId = #{requestid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shu.labrary.pojo.ApplybodyExample" >
    delete from applybody
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shu.labrary.pojo.Applybody" >
    insert into applybody (requestId, adminId, beginTime, 
      endTime, requestReason, teacherId, 
      applystatus, timestamp, totalPersonNum, 
      refuseReason, essayId)
    values (#{requestid,jdbcType=INTEGER}, #{adminid,jdbcType=VARCHAR}, #{begintime,jdbcType=TIMESTAMP}, 
      #{endtime,jdbcType=TIMESTAMP}, #{requestreason,jdbcType=VARCHAR}, #{teacherid,jdbcType=INTEGER}, 
      #{applystatus,jdbcType=INTEGER}, #{timestamp,jdbcType=TIMESTAMP}, #{totalpersonnum,jdbcType=INTEGER}, 
      #{refusereason,jdbcType=VARCHAR}, #{essayid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shu.labrary.pojo.Applybody" >
    insert into applybody
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="requestid != null" >
        requestId,
      </if>
      <if test="adminid != null" >
        adminId,
      </if>
      <if test="begintime != null" >
        beginTime,
      </if>
      <if test="endtime != null" >
        endTime,
      </if>
      <if test="requestreason != null" >
        requestReason,
      </if>
      <if test="teacherid != null" >
        teacherId,
      </if>
      <if test="applystatus != null" >
        applystatus,
      </if>
      <if test="timestamp != null" >
        timestamp,
      </if>
      <if test="totalpersonnum != null" >
        totalPersonNum,
      </if>
      <if test="refusereason != null" >
        refuseReason,
      </if>
      <if test="essayid != null" >
        essayId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="requestid != null" >
        #{requestid,jdbcType=INTEGER},
      </if>
      <if test="adminid != null" >
        #{adminid,jdbcType=VARCHAR},
      </if>
      <if test="begintime != null" >
        #{begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestreason != null" >
        #{requestreason,jdbcType=VARCHAR},
      </if>
      <if test="teacherid != null" >
        #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="applystatus != null" >
        #{applystatus,jdbcType=INTEGER},
      </if>
      <if test="timestamp != null" >
        #{timestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="totalpersonnum != null" >
        #{totalpersonnum,jdbcType=INTEGER},
      </if>
      <if test="refusereason != null" >
        #{refusereason,jdbcType=VARCHAR},
      </if>
      <if test="essayid != null" >
        #{essayid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shu.labrary.pojo.ApplybodyExample" resultType="java.lang.Integer" >
    select count(*) from applybody
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <select id="getAppointmentsin14days" resultType="java.util.Map"  >
 select applybody.requestId,applybody.adminId,applybody.beginTime,applybody.endTime,applybody.applystatus,applybody.`timestamp`

    from applybody  where applybody.beginTime>=(NOW()+INTERVAL 8 HOUR) AND applybody.beginTime &lt;=(NOW()+INTERVAL 24*13+8 HOUR)
  </select>

  <select id="selectApplicationByOneTime" resultType="java.util.Map" parameterType="java.util.Date" >
    select applybody.requestId,applybody.adminId,applybody.beginTime,applybody.endTime,applybody.requestReason,applybody.teacherId,applybody.applystatus,applybody.`timestamp`,
    applybody.totalPersonNum,admin.`name`,essay.essayId,essay.description,admin.departmentId,teacher.teacherId,teacher.teachername,essay.essayname,essay.essaysrc
    from applybody,teacher,admin,essay  where   datediff(applybody.beginTime,  #{startTime,jdbcType=DATE})=0 and applybody.beginTime>=(NOW()+INTERVAL 8 HOUR)
    AND applybody.adminId=admin.adminId AND applybody.teacherId=teacher.teacherId AND essay.essayId=applybody.essayId
  </select>

  <select id="selectApplicationByOneTime2" resultType="java.util.Map" parameterType="java.util.Date" >
    select applybody.requestId,applybody.adminId,applybody.beginTime,applybody.endTime,applybody.requestReason,applybody.teacherId,applybody.applystatus,applybody.`timestamp`,
    applybody.totalPersonNum,admin.`name`,essay.essayId,essay.description,admin.departmentId,stteacher.stteachername AS 'teachername',essay.essayname,essay.essaysrc
    from applybody,stteacher,admin,essay  where  datediff(applybody.beginTime,  #{startTime,jdbcType=DATE})=0 and applybody.beginTime>=(NOW()+INTERVAL 8 HOUR)
    AND   applybody.adminId=admin.adminId AND applybody.teacherId=stteacher.stteacherid AND essay.essayId=applybody.essayId
  </select>

  <select id="selectAppointsMents" resultType="java.util.Map" >
    select applybody.requestId,applybody.adminId,applybody.beginTime,applybody.endTime,applybody.requestReason,applybody.teacherId,applybody.applystatus,applybody.`timestamp`,
    applybody.totalPersonNum,admin.`name`,essay.essayId,essay.description,admin.departmentId,teacher.teacherId,teacher.teachername,essay.essayname,essay.essaysrc
    from applybody,teacher,admin,essay  where   datediff(applybody.beginTime,  NOW())>=0
    AND applybody.adminId=admin.adminId AND applybody.teacherId=teacher.teacherId AND  essay.essayId=applybody.essayId ORDER BY applybody.beginTime
  </select>

  <select id="selectAppointsMents2" resultType="java.util.Map" >
    select applybody.requestId,applybody.adminId,applybody.beginTime,applybody.endTime,applybody.requestReason,applybody.teacherId,applybody.applystatus,applybody.`timestamp`,
    applybody.totalPersonNum,admin.`name`,essay.essayId,essay.description,admin.departmentId,stteacher.stteachername AS 'teachername',essay.essayname,essay.essaysrc
    from applybody,stteacher,admin,essay  where   datediff(applybody.beginTime,  NOW())>=0
    AND applybody.adminId=admin.adminId AND applybody.teacherId=stteacher.stteacherid AND  essay.essayId=applybody.essayId ORDER BY applybody.beginTime
  </select>

  <select id="selectAppointmentByDate" resultType="java.util.Map"  >
     select applybody.requestId,applybody.adminId,applybody.beginTime,applybody.endTime,applybody.requestReason,applybody.teacherId,applybody.applystatus,applybody.`timestamp`,
    applybody.totalPersonNum,admin.`name`,essay.essayId,essay.description,admin.departmentId,teacher.teacherId,teacher.teachername,essay.essayname,essay.essaysrc
    from applybody,teacher,admin,essay  where   datediff(applybody.beginTime,  #{0,jdbcType=DATE})>=0 and  datediff(#{1,jdbcType=DATE},applybody.beginTime)>=0
    AND applybody.adminId=admin.adminId AND applybody.teacherId=teacher.teacherId AND  essay.essayId=applybody.essayId ORDER BY applybody.beginTime
  </select>

  <select id="selectAppointmentByDate2" resultType="java.util.Map"  >
       select applybody.requestId,applybody.adminId,applybody.beginTime,applybody.endTime,applybody.requestReason,applybody.teacherId,applybody.applystatus,applybody.`timestamp`,
    applybody.totalPersonNum,admin.`name`,essay.essayId,essay.description,admin.departmentId,stteacher.stteachername AS 'teachername',essay.essayname,essay.essaysrc
    from applybody,stteacher,admin,essay  where  datediff(applybody.beginTime,  #{0,jdbcType=DATE})>=0 and  datediff(#{1,jdbcType=DATE},applybody.beginTime)>=0
    AND    applybody.adminId=admin.adminId AND applybody.teacherId=stteacher.stteacherid AND  essay.essayId=applybody.essayId ORDER BY applybody.beginTime
  </select>

  <update id="updateByExampleSelective" parameterType="map" >
    update applybody
    <set >
      <if test="record.requestid != null" >
        requestId = #{record.requestid,jdbcType=INTEGER},
      </if>
      <if test="record.adminid != null" >
        adminId = #{record.adminid,jdbcType=VARCHAR},
      </if>
      <if test="record.begintime != null" >
        beginTime = #{record.begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null" >
        endTime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.requestreason != null" >
        requestReason = #{record.requestreason,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherid != null" >
        teacherId = #{record.teacherid,jdbcType=INTEGER},
      </if>
      <if test="record.applystatus != null" >
        applystatus = #{record.applystatus,jdbcType=INTEGER},
      </if>
      <if test="record.timestamp != null" >
        timestamp = #{record.timestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.totalpersonnum != null" >
        totalPersonNum = #{record.totalpersonnum,jdbcType=INTEGER},
      </if>
      <if test="record.refusereason != null" >
        refuseReason = #{record.refusereason,jdbcType=VARCHAR},
      </if>
      <if test="record.essayid != null" >
        essayId = #{record.essayid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update applybody
    set requestId = #{record.requestid,jdbcType=INTEGER},
      adminId = #{record.adminid,jdbcType=VARCHAR},
      beginTime = #{record.begintime,jdbcType=TIMESTAMP},
      endTime = #{record.endtime,jdbcType=TIMESTAMP},
      requestReason = #{record.requestreason,jdbcType=VARCHAR},
      teacherId = #{record.teacherid,jdbcType=INTEGER},
      applystatus = #{record.applystatus,jdbcType=INTEGER},
      timestamp = #{record.timestamp,jdbcType=TIMESTAMP},
      totalPersonNum = #{record.totalpersonnum,jdbcType=INTEGER},
      refuseReason = #{record.refusereason,jdbcType=VARCHAR},
      essayId = #{record.essayid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shu.labrary.pojo.Applybody" >
    update applybody
    <set >
      <if test="adminid != null" >
        adminId = #{adminid,jdbcType=VARCHAR},
      </if>
      <if test="begintime != null" >
        beginTime = #{begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endTime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestreason != null" >
        requestReason = #{requestreason,jdbcType=VARCHAR},
      </if>
      <if test="teacherid != null" >
        teacherId = #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="applystatus != null" >
        applystatus = #{applystatus,jdbcType=INTEGER},
      </if>
      <if test="timestamp != null" >
        timestamp = #{timestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="totalpersonnum != null" >
        totalPersonNum = #{totalpersonnum,jdbcType=INTEGER},
      </if>
      <if test="refusereason != null" >
        refuseReason = #{refusereason,jdbcType=VARCHAR},
      </if>
      <if test="essayid != null" >
        essayId = #{essayid,jdbcType=INTEGER},
      </if>
    </set>
    where requestId = #{requestid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shu.labrary.pojo.Applybody" >
    update applybody
    set adminId = #{adminid,jdbcType=VARCHAR},
      beginTime = #{begintime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      requestReason = #{requestreason,jdbcType=VARCHAR},
      teacherId = #{teacherid,jdbcType=INTEGER},
      applystatus = #{applystatus,jdbcType=INTEGER},
      timestamp = #{timestamp,jdbcType=TIMESTAMP},
      totalPersonNum = #{totalpersonnum,jdbcType=INTEGER},
      refuseReason = #{refusereason,jdbcType=VARCHAR},
      essayId = #{essayid,jdbcType=INTEGER}
    where requestId = #{requestid,jdbcType=INTEGER}
  </update>
</mapper>