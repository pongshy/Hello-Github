<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shu.labrary.mapper.StudentqMapper" >
  <resultMap id="BaseResultMap" type="com.shu.labrary.pojo.Studentq" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="onTime" property="ontime" jdbcType="INTEGER" />
    <result column="teacherMark" property="teachermark" jdbcType="DOUBLE" />
    <result column="msgMark" property="msgmark" jdbcType="INTEGER" />
    <result column="advice" property="advice" jdbcType="VARCHAR" />
    <result column="requestId" property="requestid" jdbcType="INTEGER" />
    <result column="studentId" property="studentid" jdbcType="INTEGER" />
    <result column="finish" property="finish" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, onTime, teacherMark, msgMark, advice, requestId, studentId, finish
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shu.labrary.pojo.StudentqExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from studentQ
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from studentQ
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from studentQ
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shu.labrary.pojo.StudentqExample" >
    delete from studentQ
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shu.labrary.pojo.Studentq" >
    insert into studentQ (id, onTime, teacherMark, 
      msgMark, advice, requestId, 
      studentId, finish)
    values (#{id,jdbcType=INTEGER}, #{ontime,jdbcType=INTEGER}, #{teachermark,jdbcType=DOUBLE}, 
      #{msgmark,jdbcType=INTEGER}, #{advice,jdbcType=VARCHAR}, #{requestid,jdbcType=INTEGER}, 
      #{studentid,jdbcType=INTEGER}, #{finish,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shu.labrary.pojo.Studentq" >
    insert into studentQ
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="ontime != null" >
        onTime,
      </if>
      <if test="teachermark != null" >
        teacherMark,
      </if>
      <if test="msgmark != null" >
        msgMark,
      </if>
      <if test="advice != null" >
        advice,
      </if>
      <if test="requestid != null" >
        requestId,
      </if>
      <if test="studentid != null" >
        studentId,
      </if>
      <if test="finish != null" >
        finish,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ontime != null" >
        #{ontime,jdbcType=INTEGER},
      </if>
      <if test="teachermark != null" >
        #{teachermark,jdbcType=DOUBLE},
      </if>
      <if test="msgmark != null" >
        #{msgmark,jdbcType=INTEGER},
      </if>
      <if test="advice != null" >
        #{advice,jdbcType=VARCHAR},
      </if>
      <if test="requestid != null" >
        #{requestid,jdbcType=INTEGER},
      </if>
      <if test="studentid != null" >
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="finish != null" >
        #{finish,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shu.labrary.pojo.StudentqExample" resultType="java.lang.Integer" >
    select count(*) from studentQ
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update studentQ
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ontime != null" >
        onTime = #{record.ontime,jdbcType=INTEGER},
      </if>
      <if test="record.teachermark != null" >
        teacherMark = #{record.teachermark,jdbcType=DOUBLE},
      </if>
      <if test="record.msgmark != null" >
        msgMark = #{record.msgmark,jdbcType=INTEGER},
      </if>
      <if test="record.advice != null" >
        advice = #{record.advice,jdbcType=VARCHAR},
      </if>
      <if test="record.requestid != null" >
        requestId = #{record.requestid,jdbcType=INTEGER},
      </if>
      <if test="record.studentid != null" >
        studentId = #{record.studentid,jdbcType=INTEGER},
      </if>
      <if test="record.finish != null" >
        finish = #{record.finish,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update studentQ
    set id = #{record.id,jdbcType=INTEGER},
      onTime = #{record.ontime,jdbcType=INTEGER},
      teacherMark = #{record.teachermark,jdbcType=DOUBLE},
      msgMark = #{record.msgmark,jdbcType=INTEGER},
      advice = #{record.advice,jdbcType=VARCHAR},
      requestId = #{record.requestid,jdbcType=INTEGER},
      studentId = #{record.studentid,jdbcType=INTEGER},
      finish = #{record.finish,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shu.labrary.pojo.Studentq" >
    update studentQ
    <set >
      <if test="ontime != null" >
        onTime = #{ontime,jdbcType=INTEGER},
      </if>
      <if test="teachermark != null" >
        teacherMark = #{teachermark,jdbcType=DOUBLE},
      </if>
      <if test="msgmark != null" >
        msgMark = #{msgmark,jdbcType=INTEGER},
      </if>
      <if test="advice != null" >
        advice = #{advice,jdbcType=VARCHAR},
      </if>
      <if test="requestid != null" >
        requestId = #{requestid,jdbcType=INTEGER},
      </if>
      <if test="studentid != null" >
        studentId = #{studentid,jdbcType=INTEGER},
      </if>
      <if test="finish != null" >
        finish = #{finish,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shu.labrary.pojo.Studentq" >
    update studentQ
    set onTime = #{ontime,jdbcType=INTEGER},
      teacherMark = #{teachermark,jdbcType=DOUBLE},
      msgMark = #{msgmark,jdbcType=INTEGER},
      advice = #{advice,jdbcType=VARCHAR},
      requestId = #{requestid,jdbcType=INTEGER},
      studentId = #{studentid,jdbcType=INTEGER},
      finish = #{finish,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>